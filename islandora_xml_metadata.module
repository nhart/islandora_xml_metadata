<?php

/**
 * @file
 * Defines all the hooks this module implements.
 */

/**
 * Implements hook_menu().
 */
function islandora_xml_metadata_menu() {
  return array(
    'admin/islandora/xml_metadata' => array(
      'title' => 'Metadata Display',
      'description' => 'Manage XML Datastream displays',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('islandora_xml_metadata_admin_settings_form'),
      'access arguments' => array('administer site configuration'),
      'file' => 'includes/admin.form.inc',
      'type' => MENU_NORMAL_ITEM,
    ),
    'islandora/object/%islandora_object/metadata' => array(
      'title' => 'Metadata',
      'type' => MENU_LOCAL_TASK,
      'page callback' => 'islandora_xml_metadata_view',
      'page arguments' => array(2),
      'access callback' => 'islandora_metsdata_display_view_access',
      'access arguments' => array(2),
      'weight' => 1,
    )
  );
}

function islandora_metsdata_display_view_access($object) {
  return islandora_xml_metadata_conf($object);
}

function islandora_xml_metadata_conf($object) {
  $data = data();
  $models = array_flip($object->models);
  $conf = array_intersect_key($data, $models);
  if (count($conf) >= 1) {
    return array_shift($conf);
  }
  return FALSE;
}

function islandora_xml_metadata_build($data, $xml) {
  global $user;
  $xml->registerXPathNamespace('mods', 'http://www.loc.gov/mods/v3');
  $rows = array();
  foreach ($data as $line) {

    $roles = $line['roles'];
    dsm($roles, 'roles');
    if ((user_is_anonymous() && array_search('anonymous user', $roles) !== FALSE) ||
        (count(array_intersect($roles, $user->roles)) >= 1) ||
        (!user_is_anonymous() && array_search('authenticated user', $roles) !== FALSE)) {
      $values = $xml->xpath($line['path']);
      $label = $line['label'];
      foreach ($values as $value) {
        if (isset($line['data'])) {
          $value = islandora_xml_metadata_build($line['data'], $value);
        }
        else {
          if (isset($line['link']) && $line['link']) {
            $line['link'] = preg_replace('/%value%/', $value, $line['link']);
            $value = l($value, $line['link'], array('html' => TRUE));
          }
        }

        $rows[] = array(
          'label' => $label,
          'value' => $value,
        );
        $label = '';

        if ((isset($line['multi_value']) && !$line['multi_value']) || !isset($line['multi_value'])) {
          break;
        }
      }
    }
  }
  return theme('islandora_xml_metadata_rows', array('rows' => $rows));
}

function islandora_xml_metadata_view($object) {
  global $user;
  dsm($user, 'user');
  dsm(user_roles(), 'roles');

  $conf = islandora_xml_metadata_conf($object);
  if (isset($conf)) {
    $data = $conf['data'];
    $rows = array();
    $xml = (isset($object[$conf['ds_id']]) ? $object[$conf['ds_id']]->content : NULL);
    if ($xml) {
      $metadata = new SimpleXMLElement($xml);
      $metadata->registerXPathNamespace($conf['namespace']['ns'], $conf['namespace']['uri']);
      $rows = islandora_xml_metadata_build($data, $metadata);
    }
  }
  return $rows;
}

//move this stuff to a db table
function data() {
  $data = array(
    'islandora:sp_basic_image' => array(
      'ds_id' => 'MODS',
      'namespace' => array(
        'ns' => 'mods',
        'uri' => 'http://www.loc.gov/mods/v3',
      ),
      'data' => array(
        'title' => array(
          'label' => 'title info',
          'link' => 'http://google.ca/%value%',
          'path' => 'mods:titleInfo',
          'multi_value' => TRUE,
          'roles' => array(
            'administratorrr',
            'anonymous user',
          ),
          'data' => array(
            'title' => array(
              'label' => 'title',
              'link' => 'http://google.ca/%value%',
              'path' => 'mods:title',
              'multi_value' => TRUE,
              'roles' => array(
                'administratorrr',
                'anonymous user',
              ),
            ),
          ),
        ),
        'place1' => array(
          'label' => 'origin info',
          'link' => 'http://google.ca/%value%',
          'path' => 'mods:originInfo',
          'multi_value' => TRUE,
          'roles' => array(
            'administratorrr',
          ),
          'data' => array(
            'place' => array(
              'label' => 'place',
              'link' => 'http://google.ca/%value%',
              'path' => 'mods:place',
              'multi_value' => TRUE,
              'roles' => array(
                'administratorrr',
              ),
              'data' => array(
                'place' => array(
                  'label' => 'place term',
                  'path' => 'mods:placeTerm',
                  'multi_value' => TRUE,
                  'roles' => array(
                    'administratorrr',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
    ),
  );
  return $data;
}

/**
 * Implements hook_theme().
 */
function islandora_xml_metadata_theme() {
  return array(
    'islandora_xml_metadata_display' => array(
      'template' => 'theme/islandora-xml-metadata-display',
      'variables' => array('islandora_object' => NULL),
      'file' => 'theme/theme.inc',
    ),
    'islandora_xml_metadata_rows' => array(
      'template' => 'theme/islandora-xml-metadata-rows',
      'variables' => array('rows' => NULL),
      'file' => 'theme/theme.inc',
    )
  );
}

/**
 * Implements hook_islandora_metadata_display_info().
 */
function islandora_xml_metadata_islandora_metadata_display_info() {
  return array(
    'islandora_xml_metadata' => array(
      'label' => t('Islandora XML Metadata'),
      'description' => t('Metadata display from XML datastreams'),
      'callback' => 'islandora_xml_metadata_callback',
      'configuration' => 'admin/islandora/xml_metadata',
    ),
  );
}

/**
 * Metadata display callback for rendering metadata from XML datastreams.
 *
 * @param AbstractObject $object
 *   An AbstractObject representing an object within Fedora.
 *
 * @return string
 *   Markup representing the metadata display pulled from XML datastream.
 */
function islandora_xml_metadata_callback(AbstractObject $object) {
  $elements = array(
    'islandora_object' => $object,
  );
  return theme('islandora_xml_metadata_display', $elements);
}
