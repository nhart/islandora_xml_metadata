<?php

/**
 * @file
 * Defines all the hooks this module implements.
 */

/**
 * Implements hook_menu().
 */
function islandora_metadata_display_menu() {
  return array(
    'admin/islandora/islandora_metadata_display' => array(
      'title' => 'Metadata Display',
      'description' => 'GUI for edting metadata display',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('islandora_metadata_display_admin_settings_form'),
      'access arguments' => array('administer site configuration'),
      'file' => 'includes/admin.form.inc',
      'type' => MENU_NORMAL_ITEM,
    ),
    'islandora/object/%islandora_object/metadata' => array(
      'title' => 'Metadata',
      'type' => MENU_LOCAL_TASK,
      'page callback' => 'islandora_metadata_display_view',
      'page arguments' => array(2),
      'access callback' => 'islandora_metsdata_display_view_access',
      'access arguments' => array(2),
      'weight' => 1,
    )
  );
}
/*
 * determine if metadata is in a seperate tab or not
 */
function islandora_metsdata_display_view_access($object) {
  return TRUE;
}

/**
 * Logic to process output for labels and values
 * @param type $object
 * @return string
 */
function islandora_metadata_display_view($object) {
  $data = data();
  $rows = array();
  $models = array_flip($object->models);
  dsm($models, 'models');
  $count = array_intersect_key($data, $models);
  if(count($count) >= 1) {
    $match = array_shift($count);
  }
  dsm($match);
  try {
    $xml = (isset($object[$match['ds_id']]) ? $object[$match['ds_id']]->content : NULL);
    dsm($xml, 'xml');
    $metadata = new SimpleXMLElement($xml);
    $metadata->registerXPathNamespace($match['namespace']['ns'], $match['namespace']['uri']);

    foreach($match['data'] as $line) {
      //dsm($line, 'line');
      try {
        $values = $metadata->xpath($line['path']);
        $row_value = array();
        foreach ($values as $value) {
          $row_value[] = (string) $value;
          //calculate multi value xpath
          if(isset($line['multi_value']) && $line['multi_value']) {
            //break; oppsite of break in here
          }
        }
        dsm($values, 'values');
        $value = array_shift($values);
        //$value = (string) $value;
        dsm($value, 'value');
        if(isset($line['link']) && $line['link']) {
          $line['link'] = preg_replace('/%value%/', $value, $line['link']);
          $value = l($value, $line['link']);
        }
        $i=0;
        //clean up repeating label logic
        $label = $line['label'];
        foreach($row_value as $value) {
          $i++;
          if(isset($line['repeat_label']) && $line['repeat_label']) {
            $label = $line['label'];
          }
          $rows[] = array(
            $label,
            $value,
          );
          $label = '';
        }

      } catch (Exception $exc) {

      }


    }
  } catch (Exception $exc) {
    //catch error if need be
  }



  return theme_table(array(
    'header' => array('label', 'value'),
    'rows' => $rows,
    'attributes' => array(),
    'empty' => t('No metadata configurations found'),
    'caption' => '',
    'colgroups' => array(),
    'sticky' => TRUE,
  ));
}

function data() {
  $data = array(
    'islandora:sp_basic_image' => array(
      'ds_id' => 'MODS',
      'namespace' => array(
        'ns' => 'mods',
        'uri' => 'http://www.loc.gov/mods/v3',
      ),
      'data' => array(
        array(
          'label' => 'Title',
          'link' => 'http://google.ca/%value%',
          'path' => '//mods:placeTerm',
          'multi_value' => TRUE,
          'repeat_label' => TRUE,
        ),
        array(
          'label' => 'Name',
          'path' => '//mods:placeTerm',
          'multi_value' => TRUE,
          'repeat_label' => FALSE,
        ),
      ),
    ),
    'islandora:sp_large_image_cmodel' => array(
      'ds_id' => 'MODS',
      'namespace' => array(
        'ns' => 'mods',
        'uri' => 'http://www.loc.gov/mods/v3',
      ),
      'data' => array(
        array(
          'label' => 'Title',
          'link' => 'http://google.ca/%value%',
          'path' => '//mods:title',
        ),
      ),
    ),
  );
  return $data;
}
/**
 * Implements hook_theme().
 */
function islandora_metadata_display_theme() {


  return array(
  );
}

function islandora_metadata_display_islandora_view_object_alter(&$object, &$rendered) {
  dsm($rendered, 'rendered');

}